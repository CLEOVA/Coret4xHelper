(async function() {
// Kode ini bukan dari sumber resmi.
// Gunakan kode dengan risiko Anda sendiri.
// Sepenuhnya bukan tanggungjawab tutor atau pembuat kode
// Memudahkan bukan menggantikan
    const rows = document.querySelectorAll("table tbody tr");
    let index = 0;
    let button = null;
    let isProcessing = false;
    let directoryHandle = null; // Handle folder unduhan

    async function requestDownloadFolder() {
        try {
            directoryHandle = await window.showDirectoryPicker();
            console.log("üìÅ Folder unduhan disetujui:", directoryHandle.name);
        } catch (error) {
            console.error("‚ùå Gagal mendapatkan akses folder unduhan.", error);
            alert("‚ö†Ô∏è Anda harus memilih folder unduhan agar file bisa dihapus otomatis.");
        }
    }

    async function downloadNext() {
        if (index >= rows.length) {
            console.log("‚úÖ Semua file telah diproses.");
            removeButton();
            return;
        }

        if (isProcessing) {
            console.log("‚ö†Ô∏è Sedang menunggu file sebelumnya diproses...");
            return;
        }

        isProcessing = true;

        const row = rows[index];

        // Ambil Nama Perusahaan, Nomor Faktur, dan Tanggal Faktur dari tabel
        const namaPerusahaan = row.children[3]?.innerText.trim()
            .replace(/[^a-zA-Z0-9\s]/g, "") // Hapus karakter spesial
            .replace(/\s+/g, "_"); // Ganti spasi dengan underscore (_)
        
        const nomorFaktur = row.children[5]?.innerText.trim().replace(/\s+/g, "");
        const tanggalFaktur = row.children[6]?.innerText.trim().replace(/\s+/g, "");

        const fileName = `FP_${namaPerusahaan}_${nomorFaktur}_${tanggalFaktur}.pdf`;

        const downloadButton = row.querySelector("#DownloadButton");

        if (downloadButton) {
            console.log(`‚¨áÔ∏è Mengunduh file untuk: ${fileName}...`);
            downloadButton.click();
            showButton(fileName);
        } else {
            console.error(`‚ùå Gagal menemukan tombol download untuk ${fileName}`);
            index++;
            isProcessing = false;
            downloadNext();
        }
    }

    function showButton(fileName) {
        removeButton();

        button = document.createElement("button");
        button.innerText = `Klik di sini untuk pilih & ganti nama file ke: ${fileName}`;
        button.style.position = "fixed";
        button.style.bottom = "20px";
        button.style.left = "20px";
        button.style.padding = "10px";
        button.style.fontSize = "16px";
        button.style.backgroundColor = "#28a745";
        button.style.color = "white";
        button.style.border = "none";
        button.style.borderRadius = "5px";
        button.style.cursor = "pointer";
        button.style.zIndex = "10000";
        button.onclick = async () => {
            const success = await renameAndDeleteFile(fileName);
            if (success) {
                index++;
                isProcessing = false;
                downloadNext();
            }
        };

        document.body.appendChild(button);
    }

    function removeButton() {
        if (button) {
            document.body.removeChild(button);
            button = null;
        }
    }

    async function renameAndDeleteFile(fileName) {
        try {
            console.log("üìÇ Silakan pilih file PDF yang baru saja diunduh...");

            const [fileHandle] = await window.showOpenFilePicker({
                types: [{ description: "PDF Files", accept: { "application/pdf": [".pdf"] } }]
            });

            if (!fileHandle) {
                throw new Error("Tidak ada file yang dipilih.");
            }

            console.log("üìÇ File dipilih, sedang membaca file...");

            const file = await fileHandle.getFile();
            const blob = await file.arrayBuffer();

            console.log(`üîÑ Menyimpan ulang file sebagai: ${fileName}`);

            const newHandle = await window.showSaveFilePicker({
                suggestedName: fileName,
                types: [{ description: "PDF Files", accept: { "application/pdf": [".pdf"] } }]
            });

            const writable = await newHandle.createWritable();
            await writable.write(blob);
            await writable.close();

            console.log(`‚úÖ Berhasil menyimpan: ${fileName}`);

            // üî• Coba hapus file asli jika folder unduhan telah diizinkan
            if (directoryHandle) {
                try {
                    await directoryHandle.removeEntry(fileHandle.name);
                    console.log(`üóëÔ∏è File asli (${fileHandle.name}) berhasil dihapus.`);
                } catch (deleteError) {
                    console.warn(`‚ö†Ô∏è Tidak bisa menghapus file asli (${fileHandle.name}). Silakan hapus manual.`);
                }
            } else {
                alert(`‚ùå File asli (${fileHandle.name}) tidak bisa dihapus otomatis. Silakan hapus manual.`);
            }

            return true;
        } catch (error) {
            console.error(`‚ùå Gagal mengganti nama file: ${fileName}`, error);
            alert("Gagal mengganti nama file. Pastikan Anda memilih file yang benar.");
            return false;
        }
    }

    await requestDownloadFolder();
    downloadNext();
})();
